@model virdbApp2.Models.service_desk

@{
    ViewBag.Title = "Edit";
}

<h2>Редактировать заявку</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>service desk</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.number_request, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.number_request, new { @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* !!! если использовать DisplayFor, то обратно в контроллер возвращает null*@
                @* disabled НЕ РАБОТАЕТ для @Html.EditorFor() потому что @Html.EditorFor() does not have a overload to support htmlAttributes. You could try @Html.TextBoxFor() *@
                @* @Html.EditorFor() с "disabled" тоже возвращает null *@
                @* @Html.TextBoxFor(model => model.author, new { disabled = "disabled" } ) *@
                @Html.TextBoxFor(model => model.author, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.author)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kind_id, "Категория", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("kind_id", String.Empty)
                @Html.ValidationMessageFor(model => model.kind_id)
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date_begin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.date_begin, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.date_begin)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date_end, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.date_end, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.date_end)
        </div>
    </div>
    @if (ViewBag.showStatus)
    {

        <div class="form-group">
            @Html.LabelFor(model => model.status_id, "Статус", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                 @Html.DropDownList("status_id", String.Empty)
                 @Html.ValidationMessageFor(model => model.status_id)
            </div>
        </div>
    }  

        <div class="form-group">
            @Html.LabelFor(model => model.task, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.task, new { @class = "form-control", rows = "7"})
                @Html.ValidationMessageFor(model => model.task)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.what_done, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.what_done, new { @class = "form-control", rows = "7"})
                @Html.ValidationMessageFor(model => model.what_done)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_id, "Ответственный", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("user_id", String.Empty)
                @Html.ValidationMessageFor(model => model.user_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.fio, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.fio)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.comment, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.comment)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
